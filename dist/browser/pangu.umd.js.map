{"version":3,"file":"pangu.umd.js","sources":["../../src/shared/index.ts","../../src/browser/pangu.ts","../../src/browser/pangu.umd.ts"],"sourcesContent":["// CJK is an acronym for Chinese, Japanese, and Korean.\n//\n// CJK includes the following Unicode blocks:\n// \\u2e80-\\u2eff CJK Radicals Supplement\n// \\u2f00-\\u2fdf Kangxi Radicals\n// \\u3040-\\u309f Hiragana\n// \\u30a0-\\u30ff Katakana\n// \\u3100-\\u312f Bopomofo\n// \\u3200-\\u32ff Enclosed CJK Letters and Months\n// \\u3400-\\u4dbf CJK Unified Ideographs Extension A\n// \\u4e00-\\u9fff CJK Unified Ideographs\n// \\uf900-\\ufaff CJK Compatibility Ideographs\n//\n// For more information about Unicode blocks, see\n// http://unicode-table.com/en/\n// https://github.com/vinta/pangu\n//\n// all J below does not include \\u30fb\nconst CJK = '\\u2e80-\\u2eff\\u2f00-\\u2fdf\\u3040-\\u309f\\u30a0-\\u30fa\\u30fc-\\u30ff\\u3100-\\u312f\\u3200-\\u32ff\\u3400-\\u4dbf\\u4e00-\\u9fff\\uf900-\\ufaff';\n\n// ANS is short for Alphabets, Numbers, and Symbols.\n//\n// A includes A-Za-z\\u0370-\\u03ff\n// N includes 0-9\n// S includes `~!@#$%^&*()-_=+[]{}\\|;:'\",<.>/?\n//\n// some S below does not include all symbols\n\nconst ANY_CJK = new RegExp(`[${CJK}]`);\n\n// the symbol part only includes ~ ! ; : , . ? but . only matches one character\nconst CONVERT_TO_FULLWIDTH_CJK_SYMBOLS_CJK = new RegExp(`([${CJK}])[ ]*([\\\\:]+|\\\\.)[ ]*([${CJK}])`, 'g');\nconst CONVERT_TO_FULLWIDTH_CJK_SYMBOLS = new RegExp(`([${CJK}])[ ]*([~\\\\!;,\\\\?]+)[ ]*`, 'g');\nconst DOTS_CJK = new RegExp(`([\\\\.]{2,}|\\u2026)([${CJK}])`, 'g');\nconst FIX_CJK_COLON_ANS = new RegExp(`([${CJK}])\\\\:([A-Z0-9\\\\(\\\\)])`, 'g');\n\n// the symbol part does not include '\nconst CJK_QUOTE = new RegExp(`([${CJK}])([\\`\"\\u05f4])`, 'g');\nconst QUOTE_CJK = new RegExp(`([\\`\"\\u05f4])([${CJK}])`, 'g');\nconst FIX_QUOTE_ANY_QUOTE = /([`\"\\u05f4]+)[ ]*(.+?)[ ]*([`\"\\u05f4]+)/g;\n\n// Handle curly quotes with alphanumeric characters\n// These patterns should only apply to curly quotes, not straight quotes\n// Straight quotes are already handled by CJK_QUOTE, QUOTE_CJK and FIX_QUOTE_ANY_QUOTE\nconst QUOTE_AN = /([\\u201d])([A-Za-z0-9])/g; // Only closing curly quotes + AN\n\n// Special handling for straight quotes followed by alphanumeric after CJK\n// This catches patterns like: 社\"DF where the quote appears to be closing a quoted CJK phrase\nconst CJK_QUOTE_AN = new RegExp(`([${CJK}])(\")([A-Za-z0-9])`, 'g');\n\nconst CJK_SINGLE_QUOTE_BUT_POSSESSIVE = new RegExp(`([${CJK}])('[^s])`, 'g');\nconst SINGLE_QUOTE_CJK = new RegExp(`(')([${CJK}])`, 'g');\nconst FIX_POSSESSIVE_SINGLE_QUOTE = new RegExp(`([A-Za-z0-9${CJK}])( )('s)`, 'g');\n\nconst HASH_ANS_CJK_HASH = new RegExp(`([${CJK}])(#)([${CJK}]+)(#)([${CJK}])`, 'g');\nconst CJK_HASH = new RegExp(`([${CJK}])(#([^ ]))`, 'g');\nconst HASH_CJK = new RegExp(`(([^ ])#)([${CJK}])`, 'g');\n\n// the symbol part only includes + - * / = & | < >\nconst CJK_OPERATOR_ANS = new RegExp(`([${CJK}])([\\\\+\\\\-\\\\*\\\\/=&\\\\|<>])([A-Za-z0-9])`, 'g');\nconst ANS_OPERATOR_CJK = new RegExp(`([A-Za-z0-9])([\\\\+\\\\-\\\\*\\\\/=&\\\\|<>])([${CJK}])`, 'g');\n\nconst FIX_SLASH_AS = /([/]) ([a-z\\-_\\./]+)/g;\nconst FIX_SLASH_AS_SLASH = /([/\\.])([A-Za-z\\-_\\./]+) ([/])/g;\n\n// the bracket part only includes ( ) [ ] { } < > “ ”\nconst CJK_LEFT_BRACKET = new RegExp(`([${CJK}])([\\\\(\\\\[\\\\{<>\\u201c])`, 'g');\nconst RIGHT_BRACKET_CJK = new RegExp(`([\\\\)\\\\]\\\\}<>\\u201d])([${CJK}])`, 'g');\nconst FIX_LEFT_BRACKET_ANY_RIGHT_BRACKET = /([\\(\\[\\{<\\u201c]+)[ ]*(.+?)[ ]*([\\)\\]\\}>\\u201d]+)/;\nconst ANS_CJK_LEFT_BRACKET_ANY_RIGHT_BRACKET = new RegExp(`([A-Za-z0-9${CJK}])[ ]*([\\u201c])([A-Za-z0-9${CJK}\\\\-_ ]+)([\\u201d])`, 'g');\nconst LEFT_BRACKET_ANY_RIGHT_BRACKET_ANS_CJK = new RegExp(`([\\u201c])([A-Za-z0-9${CJK}\\\\-_ ]+)([\\u201d])[ ]*([A-Za-z0-9${CJK}])`, 'g');\n\nconst AN_LEFT_BRACKET = /([A-Za-z0-9])([\\(\\[\\{])/g;\nconst RIGHT_BRACKET_AN = /([\\)\\]\\}])([A-Za-z0-9])/g;\n\nconst CJK_ANS = new RegExp(`([${CJK}])([A-Za-z\\u0370-\\u03ff0-9@\\\\$%\\\\^&\\\\*\\\\-\\\\+\\\\\\\\=\\\\|/\\u00a1-\\u00ff\\u2150-\\u218f\\u2700—\\u27bf])`, 'g');\nconst ANS_CJK = new RegExp(`([A-Za-z\\u0370-\\u03ff0-9~\\\\$%\\\\^&\\\\*\\\\-\\\\+\\\\\\\\=\\\\|/!;:,\\\\.\\\\?\\u00a1-\\u00ff\\u2150-\\u218f\\u2700—\\u27bf])([${CJK}])`, 'g');\n\nconst S_A = /(%)([A-Za-z])/g;\n\nconst MIDDLE_DOT = /([ ]*)([\\u00b7\\u2022\\u2027])([ ]*)/g;\n\nexport class Pangu {\n  version: string;\n\n  constructor() {\n    this.version = '5.0.0';\n  }\n\n  public spacingText(text: string) {\n    if (typeof text !== 'string') {\n      console.warn(`spacingText(text) only accepts string but got ${typeof text}`);\n      return text;\n    }\n\n    if (text.length <= 1 || !ANY_CJK.test(text)) {\n      return text;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n\n    // DEBUG\n    // String.prototype.rawReplace = String.prototype.replace;\n    // String.prototype.replace = function(regexp, newSubstr) {\n    //   const oldText = this;\n    //   const newText = this.rawReplace(regexp, newSubstr);\n    //   if (oldText !== newText) {\n    //     console.log(`regexp: ${regexp}`);\n    //     console.log(`oldText: ${oldText}`);\n    //     console.log(`newText: ${newText}`);\n    //   }\n    //   return newText;\n    // };\n\n    let newText = text;\n\n    // https://stackoverflow.com/questions/4285472/multiple-regex-replace\n    newText = newText.replace(CONVERT_TO_FULLWIDTH_CJK_SYMBOLS_CJK, (_match, leftCjk, symbols, rightCjk) => {\n      const fullwidthSymbols = self.convertToFullwidth(symbols);\n      return `${leftCjk}${fullwidthSymbols}${rightCjk}`;\n    });\n\n    newText = newText.replace(CONVERT_TO_FULLWIDTH_CJK_SYMBOLS, (_match, cjk, symbols) => {\n      const fullwidthSymbols = self.convertToFullwidth(symbols);\n      return `${cjk}${fullwidthSymbols}`;\n    });\n\n    newText = newText.replace(DOTS_CJK, '$1 $2');\n    newText = newText.replace(FIX_CJK_COLON_ANS, '$1：$2');\n\n    newText = newText.replace(CJK_QUOTE, '$1 $2');\n    newText = newText.replace(QUOTE_CJK, '$1 $2');\n    newText = newText.replace(FIX_QUOTE_ANY_QUOTE, '$1$2$3');\n\n    // Handle quotes with alphanumeric - closing quotes followed by AN need space\n    newText = newText.replace(QUOTE_AN, '$1 $2');\n    // Opening quotes preceded by AN don't need space (they're handled by other patterns)\n\n    // Handle CJK followed by closing quote followed by alphanumeric\n    newText = newText.replace(CJK_QUOTE_AN, '$1$2 $3');\n\n    newText = newText.replace(CJK_SINGLE_QUOTE_BUT_POSSESSIVE, '$1 $2');\n    newText = newText.replace(SINGLE_QUOTE_CJK, '$1 $2');\n    newText = newText.replace(FIX_POSSESSIVE_SINGLE_QUOTE, \"$1's\");\n\n    newText = newText.replace(HASH_ANS_CJK_HASH, '$1 $2$3$4 $5');\n    newText = newText.replace(CJK_HASH, '$1 $2');\n    newText = newText.replace(HASH_CJK, '$1 $3');\n\n    newText = newText.replace(CJK_OPERATOR_ANS, '$1 $2 $3');\n    newText = newText.replace(ANS_OPERATOR_CJK, '$1 $2 $3');\n\n    newText = newText.replace(FIX_SLASH_AS, '$1$2');\n    newText = newText.replace(FIX_SLASH_AS_SLASH, '$1$2$3');\n\n    newText = newText.replace(CJK_LEFT_BRACKET, '$1 $2');\n    newText = newText.replace(RIGHT_BRACKET_CJK, '$1 $2');\n    newText = newText.replace(FIX_LEFT_BRACKET_ANY_RIGHT_BRACKET, '$1$2$3');\n    newText = newText.replace(ANS_CJK_LEFT_BRACKET_ANY_RIGHT_BRACKET, '$1 $2$3$4');\n    newText = newText.replace(LEFT_BRACKET_ANY_RIGHT_BRACKET_ANS_CJK, '$1$2$3 $4');\n\n    newText = newText.replace(AN_LEFT_BRACKET, '$1 $2');\n    newText = newText.replace(RIGHT_BRACKET_AN, '$1 $2');\n\n    newText = newText.replace(CJK_ANS, '$1 $2');\n    newText = newText.replace(ANS_CJK, '$1 $2');\n\n    newText = newText.replace(S_A, '$1 $2');\n\n    newText = newText.replace(MIDDLE_DOT, '・');\n\n    // DEBUG\n    // String.prototype.replace = String.prototype.rawReplace;\n\n    return newText;\n  }\n\n  // alias for spacingText()\n  public spacing(text: string) {\n    return this.spacingText(text);\n  }\n\n  protected convertToFullwidth(symbols: string): string {\n    // prettier-ignore\n    return symbols\n      .replace(/~/g, '～')\n      .replace(/!/g, '！')\n      .replace(/;/g, '；')\n      .replace(/:/g, '：')\n      .replace(/,/g, '，')\n      .replace(/\\./g, '。')\n      .replace(/\\?/g, '？');\n  }\n}\n\nexport const pangu = new Pangu();\n\nexport default pangu;\n","import { Pangu } from '../shared';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction once<T extends (...args: any[]) => any>(func: T) {\n  let executed = false;\n  return function (...args: Parameters<T>) {\n    if (executed) {\n      return undefined;\n    }\n    executed = true;\n    return func(...args);\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction debounce<T extends (...args: any[]) => void>(func: T, delay: number, mustRunDelay: number = Infinity) {\n  let timer: number | null = null;\n  let startTime: number | null = null;\n\n  return function (...args: Parameters<T>) {\n    const currentTime = Date.now();\n\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    if (!startTime) {\n      startTime = currentTime;\n    }\n\n    if (currentTime - startTime >= mustRunDelay) {\n      func(...args);\n      startTime = currentTime;\n    } else {\n      timer = window.setTimeout(() => {\n        func(...args);\n      }, delay);\n    }\n  };\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n\nexport class BrowserPangu extends Pangu {\n  blockTags: RegExp;\n  ignoredTags: RegExp;\n  presentationalTags: RegExp;\n  spaceLikeTags: RegExp;\n  spaceSensitiveTags: RegExp;\n  isAutoSpacingPageExecuted: boolean;\n\n  constructor() {\n    super();\n\n    this.blockTags = /^(div|p|h1|h2|h3|h4|h5|h6)$/i;\n    this.ignoredTags = /^(code|pre|script|style|textarea|iframe)$/i;\n    this.presentationalTags = /^(b|code|del|em|i|s|strong|kbd)$/i;\n    this.spaceLikeTags = /^(br|hr|i|img|pangu)$/i;\n    this.spaceSensitiveTags = /^(a|del|pre|s|strike|u)$/i;\n    this.isAutoSpacingPageExecuted = false;\n  }\n\n  public spacingNodeByXPath(xPathQuery: string, contextNode: Node) {\n    if (!(contextNode instanceof Node) || contextNode instanceof DocumentFragment) {\n      return;\n    }\n\n    // 因為 xPathQuery 會是用 text() 結尾，所以這些 nodes 會是 text 而不是 DOM element\n    // snapshotLength 要配合 XPathResult.ORDERED_NODE_SNAPSHOT_TYPE 使用\n    // https://developer.mozilla.org/en-US/docs/DOM/document.evaluate\n    // https://developer.mozilla.org/en-US/docs/Web/API/XPathResult\n    const textNodes = document.evaluate(xPathQuery, contextNode, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);\n\n    let currentTextNode: Node | null;\n    let nextTextNode: Node | null = null;\n\n    // 從最下面、最裡面的節點開始，所以是倒序的\n    for (let i = textNodes.snapshotLength - 1; i > -1; --i) {\n      currentTextNode = textNodes.snapshotItem(i);\n      if (!currentTextNode) continue;\n\n      if (\n        currentTextNode.parentNode &&\n        this.isSpecificTag(currentTextNode.parentNode, this.presentationalTags) &&\n        !this.isInsideSpecificTag(currentTextNode.parentNode, this.ignoredTags)\n      ) {\n        const elementNode = currentTextNode.parentNode;\n\n        if (elementNode.previousSibling) {\n          const { previousSibling } = elementNode;\n          if (previousSibling.nodeType === Node.TEXT_NODE) {\n            const testText = (previousSibling as Text).data.slice(-1) + (currentTextNode as Text).data.charAt(0);\n            const testNewText = this.spacingText(testText);\n            if (testText !== testNewText) {\n              (previousSibling as Text).data = `${(previousSibling as Text).data} `;\n            }\n          }\n        }\n\n        if (elementNode.nextSibling) {\n          const { nextSibling } = elementNode;\n          if (nextSibling.nodeType === Node.TEXT_NODE) {\n            const testText = (currentTextNode as Text).data.slice(-1) + (nextSibling as Text).data.charAt(0);\n            const testNewText = this.spacingText(testText);\n            if (testText !== testNewText) {\n              (nextSibling as Text).data = ` ${(nextSibling as Text).data}`;\n            }\n          }\n        }\n      }\n\n      if (this.canIgnoreNode(currentTextNode)) {\n        nextTextNode = currentTextNode;\n        continue;\n      }\n\n      if (currentTextNode instanceof Text) {\n        const newText = this.spacingText(currentTextNode.data);\n        if (currentTextNode.data !== newText) {\n          currentTextNode.data = newText;\n        }\n      }\n\n      // 處理嵌套的 <tag> 中的文字\n      if (nextTextNode) {\n        // TODO\n        // 現在只是簡單地判斷相鄰的下一個 node 是不是 <br>\n        // 萬一遇上嵌套的標籤就不行了\n        if (currentTextNode.nextSibling && currentTextNode.nextSibling.nodeName.search(this.spaceLikeTags) >= 0) {\n          nextTextNode = currentTextNode;\n          continue;\n        }\n\n        // currentTextNode 的最後一個字 + nextTextNode 的第一個字\n        if (!(currentTextNode instanceof Text) || !(nextTextNode instanceof Text)) {\n          continue;\n        }\n        const testText = currentTextNode.data.slice(-1) + nextTextNode.data.slice(0, 1);\n        const testNewText = this.spacingText(testText);\n        if (testNewText !== testText) {\n          // 往上找 nextTextNode 的 parent node\n          // 直到遇到 spaceSensitiveTags\n          // 而且 nextTextNode 必須是第一個 text child\n          // 才能把空格加在 nextTextNode 的前面\n          let nextNode: Node = nextTextNode;\n          while (\n            nextNode.parentNode &&\n            nextNode.nodeName.search(this.spaceSensitiveTags) === -1 &&\n            this.isFirstTextChild(nextNode.parentNode, nextNode)\n          ) {\n            nextNode = nextNode.parentNode;\n          }\n\n          let currentNode: Node = currentTextNode;\n          while (\n            currentNode.parentNode &&\n            currentNode.nodeName.search(this.spaceSensitiveTags) === -1 &&\n            this.isLastTextChild(currentNode.parentNode, currentNode)\n          ) {\n            currentNode = currentNode.parentNode;\n          }\n\n          if (currentNode.nextSibling) {\n            if (currentNode.nextSibling.nodeName.search(this.spaceLikeTags) >= 0) {\n              nextTextNode = currentTextNode;\n              continue;\n            }\n          }\n\n          if (currentNode.nodeName.search(this.blockTags) === -1) {\n            if (nextNode.nodeName.search(this.spaceSensitiveTags) === -1) {\n              if (\n                nextNode.nodeName.search(this.ignoredTags) === -1 &&\n                nextNode.nodeName.search(this.blockTags) === -1\n              ) {\n                if (nextTextNode.previousSibling) {\n                  if (nextTextNode.previousSibling.nodeName.search(this.spaceLikeTags) === -1) {\n                    if (nextTextNode instanceof Text) {\n                      nextTextNode.data = ` ${nextTextNode.data}`;\n                    }\n                  }\n                } else {\n                  // dirty hack\n                  if (!this.canIgnoreNode(nextTextNode)) {\n                    if (nextTextNode instanceof Text) {\n                      nextTextNode.data = ` ${nextTextNode.data}`;\n                    }\n                  }\n                }\n              }\n            } else if (currentNode.nodeName.search(this.spaceSensitiveTags) === -1) {\n              if (currentTextNode instanceof Text) {\n                currentTextNode.data = `${currentTextNode.data} `;\n              }\n            } else {\n              const panguSpace = document.createElement('pangu');\n              panguSpace.innerHTML = ' ';\n\n              // 避免一直被加空格\n              if (nextNode.parentNode) {\n                if (nextNode.previousSibling) {\n                  if (nextNode.previousSibling.nodeName.search(this.spaceLikeTags) === -1) {\n                    nextNode.parentNode.insertBefore(panguSpace, nextNode);\n                  }\n                } else {\n                  nextNode.parentNode.insertBefore(panguSpace, nextNode);\n                }\n              }\n\n              // TODO\n              // 主要是想要避免在元素（通常都是 <li>）的開頭加空格\n              // 這個做法有點蠢，但是不管還是先硬上\n              if (!panguSpace.previousElementSibling) {\n                if (panguSpace.parentNode) {\n                  panguSpace.parentNode.removeChild(panguSpace);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      nextTextNode = currentTextNode;\n    }\n  }\n\n  public spacingNode(contextNode: Node) {\n    let xPathQuery = './/*/text()[normalize-space(.)]';\n    if (contextNode instanceof Element && contextNode.children && contextNode.children.length === 0) {\n      xPathQuery = './/text()[normalize-space(.)]';\n    }\n    this.spacingNodeByXPath(xPathQuery, contextNode);\n  }\n\n  public spacingElementById(idName: string) {\n    const xPathQuery = `id(\"${idName}\")//text()`;\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  public spacingElementByClassName(className: string) {\n    const xPathQuery = `//*[contains(concat(\" \", normalize-space(@class), \" \"), \"${className}\")]//text()`;\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  public spacingElementByTagName(tagName: string) {\n    const xPathQuery = `//${tagName}//text()`;\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  public spacingPageTitle() {\n    const xPathQuery = '/html/head/title/text()';\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  public spacingPageBody() {\n    // // >> 任意位置的節點\n    // . >> 當前節點\n    // .. >> 父節點\n    // [] >> 條件\n    // text() >> 節點的文字內容，例如 hello 之於 <tag>hello</tag>\n    // https://www.w3schools.com/xml/xpath_syntax.asp\n    //\n    // [@contenteditable]\n    // 帶有 contenteditable 屬性的節點\n    //\n    // normalize-space(.)\n    // 當前節點的頭尾的空白字元都會被移除，大於兩個以上的空白字元會被置換成單一空白\n    // https://developer.mozilla.org/en-US/docs/Web/XPath/Functions/normalize-space\n    //\n    // name(..)\n    // 父節點的名稱\n    // https://developer.mozilla.org/en-US/docs/Web/XPath/Functions/name\n    //\n    // translate(string, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\")\n    // 將 string 轉換成小寫，因為 XML 是 case-sensitive 的\n    // https://developer.mozilla.org/en-US/docs/Web/XPath/Functions/translate\n    //\n    // 1. 處理 <title>\n    // 2. 處理 <body> 底下的節點\n    // 3. 略過 contentEditable 的節點\n    // 4. 略過特定節點，例如 <script> 和 <style>\n    //\n    // 注意，以下的 query 只會取出各節點的 text 內容！\n    let xPathQuery = '/html/body//*/text()[normalize-space(.)]';\n    ['script', 'style', 'textarea'].forEach((tag) => {\n      // 理論上這幾個 tag 裡面不會包含其他 tag\n      // 所以可以直接用 .. 取父節點\n      // ex: [translate(name(..), \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\") != \"script\"]\n      xPathQuery = `${xPathQuery}[translate(name(..),\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\"abcdefghijklmnopqrstuvwxyz\")!=\"${tag}\"]`;\n    });\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  public spacingPage() {\n    this.spacingPageTitle();\n    this.spacingPageBody();\n  }\n\n  public autoSpacingPage(pageDelay = 1000, nodeDelay = 500, nodeMaxWait = 2000) {\n    if (!(document.body instanceof Node)) {\n      return;\n    }\n\n    if (this.isAutoSpacingPageExecuted) {\n      return;\n    }\n    this.isAutoSpacingPageExecuted = true;\n\n    const onceSpacingPage = once(() => {\n      this.spacingPage();\n    });\n\n    // TODO\n    // this is a dirty hack for https://github.com/vinta/pangu.js/issues/117\n    const videos = document.getElementsByTagName('video');\n    if (videos.length === 0) {\n      setTimeout(() => {\n        onceSpacingPage();\n      }, pageDelay);\n    } else {\n      for (let i = 0; i < videos.length; i++) {\n        const video = videos[i];\n        if (video.readyState === 4) {\n          setTimeout(() => {\n            onceSpacingPage();\n          }, 3000);\n          break;\n        }\n        video.addEventListener('loadeddata', () => {\n          setTimeout(() => {\n            onceSpacingPage();\n          }, 4000);\n        });\n      }\n    }\n\n    const queue: Node[] = [];\n\n    // it's possible that multiple workers process the queue at the same time\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    const debouncedSpacingNodes = debounce(\n      () => {\n        // a single node could be very big which contains a lot of child nodes\n        while (queue.length) {\n          const node = queue.shift();\n          if (node) {\n            self.spacingNode(node);\n          }\n        }\n      },\n      nodeDelay,\n      nodeMaxWait,\n    );\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n    const mutationObserver = new MutationObserver((mutations) => {\n      // Element: https://developer.mozilla.org/en-US/docs/Web/API/Element\n      // Text: https://developer.mozilla.org/en-US/docs/Web/API/Text\n      mutations.forEach((mutation) => {\n        switch (mutation.type) {\n          case 'childList':\n            mutation.addedNodes.forEach((node) => {\n              if (node.nodeType === Node.ELEMENT_NODE) {\n                queue.push(node);\n              } else if (node.nodeType === Node.TEXT_NODE && node.parentNode) {\n                queue.push(node.parentNode);\n              }\n            });\n            break;\n          case 'characterData':\n            const { target: node } = mutation;\n            if (node.nodeType === Node.TEXT_NODE && node.parentNode) {\n              queue.push(node.parentNode);\n            }\n            break;\n          default:\n            break;\n        }\n      });\n\n      debouncedSpacingNodes();\n    });\n    mutationObserver.observe(document.body, {\n      characterData: true,\n      childList: true,\n      subtree: true,\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  protected isContentEditable(node: any) {\n    return node.isContentEditable || (node.getAttribute && node.getAttribute('g_editable') === 'true');\n  }\n\n  protected isSpecificTag(node: Node, tagRegex: RegExp) {\n    return node && node.nodeName && node.nodeName.search(tagRegex) >= 0;\n  }\n\n  protected isInsideSpecificTag(node: Node, tagRegex: RegExp, checkCurrent = false) {\n    let currentNode = node;\n    if (checkCurrent) {\n      if (this.isSpecificTag(currentNode, tagRegex)) {\n        return true;\n      }\n    }\n    while (currentNode.parentNode) {\n      currentNode = currentNode.parentNode;\n      if (this.isSpecificTag(currentNode, tagRegex)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  protected canIgnoreNode(node: Node) {\n    let currentNode = node;\n    if (currentNode && (this.isSpecificTag(currentNode, this.ignoredTags) || this.isContentEditable(currentNode))) {\n      return true;\n    }\n    while (currentNode.parentNode) {\n      currentNode = currentNode.parentNode;\n      if (currentNode && (this.isSpecificTag(currentNode, this.ignoredTags) || this.isContentEditable(currentNode))) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  protected isFirstTextChild(parentNode: Node, targetNode: Node) {\n    const { childNodes } = parentNode;\n\n    // 只判斷第一個含有 text 的 node\n    for (let i = 0; i < childNodes.length; i++) {\n      const childNode = childNodes[i];\n      if (childNode.nodeType !== Node.COMMENT_NODE && childNode.textContent) {\n        return childNode === targetNode;\n      }\n    }\n    return false;\n  }\n\n  protected isLastTextChild(parentNode: Node, targetNode: Node) {\n    const { childNodes } = parentNode;\n\n    // 只判斷倒數第一個含有 text 的 node\n    for (let i = childNodes.length - 1; i > -1; i--) {\n      const childNode = childNodes[i];\n      if (childNode.nodeType !== Node.COMMENT_NODE && childNode.textContent) {\n        return childNode === targetNode;\n      }\n    }\n    return false;\n  }\n}\n\nexport const pangu = new BrowserPangu();\n\nexport default pangu;\n","import pangu, { BrowserPangu } from './pangu';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(pangu as any).BrowserPangu = BrowserPangu;\n\n// Declare global for UMD builds\ndeclare global {\n  interface Window {\n    pangu: typeof pangu & { BrowserPangu: typeof BrowserPangu };\n  }\n}\n\nexport default pangu;\n"],"names":["self","node"],"mappings":"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"}