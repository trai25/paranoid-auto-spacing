{"version":3,"file":"cli.cjs","sources":["../browser/pangu.js","cli.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nimport { Pangu } from \"../shared/index.js\";\nfunction once(func) {\n  let executed = false;\n  return function(...args) {\n    if (executed) {\n      return void 0;\n    }\n    executed = true;\n    return func(...args);\n  };\n}\nfunction debounce(func, delay, mustRunDelay = Infinity) {\n  let timer = null;\n  let startTime = null;\n  return function(...args) {\n    const currentTime = Date.now();\n    if (timer) {\n      clearTimeout(timer);\n    }\n    if (!startTime) {\n      startTime = currentTime;\n    }\n    if (currentTime - startTime >= mustRunDelay) {\n      func(...args);\n      startTime = currentTime;\n    } else {\n      timer = window.setTimeout(() => {\n        func(...args);\n      }, delay);\n    }\n  };\n}\nclass BrowserPangu extends Pangu {\n  constructor() {\n    super();\n    __publicField(this, \"blockTags\");\n    __publicField(this, \"ignoredTags\");\n    __publicField(this, \"presentationalTags\");\n    __publicField(this, \"spaceLikeTags\");\n    __publicField(this, \"spaceSensitiveTags\");\n    __publicField(this, \"isAutoSpacingPageExecuted\");\n    this.blockTags = /^(div|p|h1|h2|h3|h4|h5|h6)$/i;\n    this.ignoredTags = /^(code|pre|script|style|textarea|iframe)$/i;\n    this.presentationalTags = /^(b|code|del|em|i|s|strong|kbd)$/i;\n    this.spaceLikeTags = /^(br|hr|i|img|pangu)$/i;\n    this.spaceSensitiveTags = /^(a|del|pre|s|strike|u)$/i;\n    this.isAutoSpacingPageExecuted = false;\n  }\n  spacingNodeByXPath(xPathQuery, contextNode) {\n    if (!(contextNode instanceof Node) || contextNode instanceof DocumentFragment) {\n      return;\n    }\n    const textNodes = document.evaluate(xPathQuery, contextNode, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);\n    let currentTextNode;\n    let nextTextNode = null;\n    for (let i = textNodes.snapshotLength - 1; i > -1; --i) {\n      currentTextNode = textNodes.snapshotItem(i);\n      if (!currentTextNode) continue;\n      if (currentTextNode.parentNode && this.isSpecificTag(currentTextNode.parentNode, this.presentationalTags) && !this.isInsideSpecificTag(currentTextNode.parentNode, this.ignoredTags)) {\n        const elementNode = currentTextNode.parentNode;\n        if (elementNode.previousSibling) {\n          const { previousSibling } = elementNode;\n          if (previousSibling.nodeType === Node.TEXT_NODE) {\n            const testText = previousSibling.data.slice(-1) + currentTextNode.data.charAt(0);\n            const testNewText = this.spacingText(testText);\n            if (testText !== testNewText) {\n              previousSibling.data = `${previousSibling.data} `;\n            }\n          }\n        }\n        if (elementNode.nextSibling) {\n          const { nextSibling } = elementNode;\n          if (nextSibling.nodeType === Node.TEXT_NODE) {\n            const testText = currentTextNode.data.slice(-1) + nextSibling.data.charAt(0);\n            const testNewText = this.spacingText(testText);\n            if (testText !== testNewText) {\n              nextSibling.data = ` ${nextSibling.data}`;\n            }\n          }\n        }\n      }\n      if (this.canIgnoreNode(currentTextNode)) {\n        nextTextNode = currentTextNode;\n        continue;\n      }\n      if (currentTextNode instanceof Text) {\n        const newText = this.spacingText(currentTextNode.data);\n        if (currentTextNode.data !== newText) {\n          currentTextNode.data = newText;\n        }\n      }\n      if (nextTextNode) {\n        if (currentTextNode.nextSibling && currentTextNode.nextSibling.nodeName.search(this.spaceLikeTags) >= 0) {\n          nextTextNode = currentTextNode;\n          continue;\n        }\n        if (!(currentTextNode instanceof Text) || !(nextTextNode instanceof Text)) {\n          continue;\n        }\n        const testText = currentTextNode.data.slice(-1) + nextTextNode.data.slice(0, 1);\n        const testNewText = this.spacingText(testText);\n        if (testNewText !== testText) {\n          let nextNode = nextTextNode;\n          while (nextNode.parentNode && nextNode.nodeName.search(this.spaceSensitiveTags) === -1 && this.isFirstTextChild(nextNode.parentNode, nextNode)) {\n            nextNode = nextNode.parentNode;\n          }\n          let currentNode = currentTextNode;\n          while (currentNode.parentNode && currentNode.nodeName.search(this.spaceSensitiveTags) === -1 && this.isLastTextChild(currentNode.parentNode, currentNode)) {\n            currentNode = currentNode.parentNode;\n          }\n          if (currentNode.nextSibling) {\n            if (currentNode.nextSibling.nodeName.search(this.spaceLikeTags) >= 0) {\n              nextTextNode = currentTextNode;\n              continue;\n            }\n          }\n          if (currentNode.nodeName.search(this.blockTags) === -1) {\n            if (nextNode.nodeName.search(this.spaceSensitiveTags) === -1) {\n              if (nextNode.nodeName.search(this.ignoredTags) === -1 && nextNode.nodeName.search(this.blockTags) === -1) {\n                if (nextTextNode.previousSibling) {\n                  if (nextTextNode.previousSibling.nodeName.search(this.spaceLikeTags) === -1) {\n                    if (nextTextNode instanceof Text) {\n                      nextTextNode.data = ` ${nextTextNode.data}`;\n                    }\n                  }\n                } else {\n                  if (!this.canIgnoreNode(nextTextNode)) {\n                    if (nextTextNode instanceof Text) {\n                      nextTextNode.data = ` ${nextTextNode.data}`;\n                    }\n                  }\n                }\n              }\n            } else if (currentNode.nodeName.search(this.spaceSensitiveTags) === -1) {\n              if (currentTextNode instanceof Text) {\n                currentTextNode.data = `${currentTextNode.data} `;\n              }\n            } else {\n              const panguSpace = document.createElement(\"pangu\");\n              panguSpace.innerHTML = \" \";\n              if (nextNode.parentNode) {\n                if (nextNode.previousSibling) {\n                  if (nextNode.previousSibling.nodeName.search(this.spaceLikeTags) === -1) {\n                    nextNode.parentNode.insertBefore(panguSpace, nextNode);\n                  }\n                } else {\n                  nextNode.parentNode.insertBefore(panguSpace, nextNode);\n                }\n              }\n              if (!panguSpace.previousElementSibling) {\n                if (panguSpace.parentNode) {\n                  panguSpace.parentNode.removeChild(panguSpace);\n                }\n              }\n            }\n          }\n        }\n      }\n      nextTextNode = currentTextNode;\n    }\n  }\n  spacingNode(contextNode) {\n    let xPathQuery = \".//*/text()[normalize-space(.)]\";\n    if (contextNode instanceof Element && contextNode.children && contextNode.children.length === 0) {\n      xPathQuery = \".//text()[normalize-space(.)]\";\n    }\n    this.spacingNodeByXPath(xPathQuery, contextNode);\n  }\n  spacingElementById(idName) {\n    const xPathQuery = `id(\"${idName}\")//text()`;\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n  spacingElementByClassName(className) {\n    const xPathQuery = `//*[contains(concat(\" \", normalize-space(@class), \" \"), \"${className}\")]//text()`;\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n  spacingElementByTagName(tagName) {\n    const xPathQuery = `//${tagName}//text()`;\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n  spacingPageTitle() {\n    const xPathQuery = \"/html/head/title/text()\";\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n  spacingPageBody() {\n    let xPathQuery = \"/html/body//*/text()[normalize-space(.)]\";\n    [\"script\", \"style\", \"textarea\"].forEach((tag) => {\n      xPathQuery = `${xPathQuery}[translate(name(..),\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\"abcdefghijklmnopqrstuvwxyz\")!=\"${tag}\"]`;\n    });\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n  spacingPage() {\n    this.spacingPageTitle();\n    this.spacingPageBody();\n  }\n  autoSpacingPage(pageDelay = 1e3, nodeDelay = 500, nodeMaxWait = 2e3) {\n    if (!(document.body instanceof Node)) {\n      return;\n    }\n    if (this.isAutoSpacingPageExecuted) {\n      return;\n    }\n    this.isAutoSpacingPageExecuted = true;\n    const onceSpacingPage = once(() => {\n      this.spacingPage();\n    });\n    const videos = document.getElementsByTagName(\"video\");\n    if (videos.length === 0) {\n      setTimeout(() => {\n        onceSpacingPage();\n      }, pageDelay);\n    } else {\n      for (let i = 0; i < videos.length; i++) {\n        const video = videos[i];\n        if (video.readyState === 4) {\n          setTimeout(() => {\n            onceSpacingPage();\n          }, 3e3);\n          break;\n        }\n        video.addEventListener(\"loadeddata\", () => {\n          setTimeout(() => {\n            onceSpacingPage();\n          }, 4e3);\n        });\n      }\n    }\n    const queue = [];\n    const self = this;\n    const debouncedSpacingNodes = debounce(\n      () => {\n        while (queue.length) {\n          const node = queue.shift();\n          if (node) {\n            self.spacingNode(node);\n          }\n        }\n      },\n      nodeDelay,\n      nodeMaxWait\n    );\n    const mutationObserver = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        switch (mutation.type) {\n          case \"childList\":\n            mutation.addedNodes.forEach((node2) => {\n              if (node2.nodeType === Node.ELEMENT_NODE) {\n                queue.push(node2);\n              } else if (node2.nodeType === Node.TEXT_NODE && node2.parentNode) {\n                queue.push(node2.parentNode);\n              }\n            });\n            break;\n          case \"characterData\":\n            const { target: node } = mutation;\n            if (node.nodeType === Node.TEXT_NODE && node.parentNode) {\n              queue.push(node.parentNode);\n            }\n            break;\n        }\n      });\n      debouncedSpacingNodes();\n    });\n    mutationObserver.observe(document.body, {\n      characterData: true,\n      childList: true,\n      subtree: true\n    });\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isContentEditable(node) {\n    return node.isContentEditable || node.getAttribute && node.getAttribute(\"g_editable\") === \"true\";\n  }\n  isSpecificTag(node, tagRegex) {\n    return node && node.nodeName && node.nodeName.search(tagRegex) >= 0;\n  }\n  isInsideSpecificTag(node, tagRegex, checkCurrent = false) {\n    let currentNode = node;\n    if (checkCurrent) {\n      if (this.isSpecificTag(currentNode, tagRegex)) {\n        return true;\n      }\n    }\n    while (currentNode.parentNode) {\n      currentNode = currentNode.parentNode;\n      if (this.isSpecificTag(currentNode, tagRegex)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  canIgnoreNode(node) {\n    let currentNode = node;\n    if (currentNode && (this.isSpecificTag(currentNode, this.ignoredTags) || this.isContentEditable(currentNode))) {\n      return true;\n    }\n    while (currentNode.parentNode) {\n      currentNode = currentNode.parentNode;\n      if (currentNode && (this.isSpecificTag(currentNode, this.ignoredTags) || this.isContentEditable(currentNode))) {\n        return true;\n      }\n    }\n    return false;\n  }\n  isFirstTextChild(parentNode, targetNode) {\n    const { childNodes } = parentNode;\n    for (let i = 0; i < childNodes.length; i++) {\n      const childNode = childNodes[i];\n      if (childNode.nodeType !== Node.COMMENT_NODE && childNode.textContent) {\n        return childNode === targetNode;\n      }\n    }\n    return false;\n  }\n  isLastTextChild(parentNode, targetNode) {\n    const { childNodes } = parentNode;\n    for (let i = childNodes.length - 1; i > -1; i--) {\n      const childNode = childNodes[i];\n      if (childNode.nodeType !== Node.COMMENT_NODE && childNode.textContent) {\n        return childNode === targetNode;\n      }\n    }\n    return false;\n  }\n}\nconst pangu = new BrowserPangu();\nexport {\n  BrowserPangu,\n  pangu as default,\n  pangu\n};\n//# sourceMappingURL=pangu.js.map\n","#!/usr/bin/env node\nimport { pangu } from \"./index.js\";\nconst usage = `\nusage: pangu [-h] [-v] [-t] [-f] text_or_path\n\npangu.js -- Paranoid text spacing for good readability, to automatically\ninsert whitespace between CJK and half-width characters (alphabetical letters,\nnumerical digits and symbols).\n\npositional arguments:\n  text_or_path   the text or file path to apply spacing\n\noptional arguments:\n  -h, --help     show this help message and exit\n  -v, --version  show program's version number and exit\n  -t, --text     specify the input value is a text\n  -f, --file     specify the input value is a file path\n`.trim();\nconst [, , ...args] = process.argv;\nfunction printSpacingText(text) {\n  if (typeof text === \"string\") {\n    console.log(pangu.spacingText(text));\n  } else {\n    console.log(usage);\n    process.exit(1);\n  }\n}\nfunction printSpacingFile(path) {\n  if (typeof path === \"string\") {\n    console.log(pangu.spacingFileSync(path));\n  } else {\n    console.log(usage);\n    process.exit(1);\n  }\n}\nif (args.length === 0) {\n  console.log(usage);\n} else {\n  switch (args[0]) {\n    case \"-h\":\n    case \"--help\":\n      console.log(usage);\n      break;\n    case \"-v\":\n    case \"--version\":\n      console.log(pangu.version);\n      break;\n    case \"-t\":\n      printSpacingText(args[1]);\n      break;\n    case \"-f\":\n      printSpacingFile(args[1]);\n      break;\n    default:\n      printSpacingText(args[0]);\n  }\n}\nprocess.exit(0);\n//# sourceMappingURL=cli.js.map\n"],"names":["args","Pangu"],"mappings":"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"}